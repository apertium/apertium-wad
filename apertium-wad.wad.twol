! TODO:
! /a/ deletion in verbs (dissertation 2.3.4, page 54/72)
! reduplication should probably just be lexical
! clitics page 173/191
! affixes page 196/214

Alphabet
 A B D E G I J K L M N O P R S T U V W Y Z Ŋ
 a b d e g i j k l m n o p r s t u v w y z ŋ
 %{A%}:a %>:0

  %[%+1incdu%]:0 %[%+1incpl%]:0 %[%+1sg%]:0 %[%+1excdu%]:0 %[%+1excpl%]:0 %[%+2sg%]:0 %[%+2du%]:0 %[%+2pl%]:0 %[%+3sg%]:0 %[%+3du%]:0 %[%+3plhum%]:0 %[%+3plnh%]:0  %[%-1incdu%]:0 %[%-1incpl%]:0 %[%-1sg%]:0 %[%-1excdu%]:0 %[%-1excpl%]:0 %[%-2sg%]:0 %[%-2du%]:0 %[%-2pl%]:0 %[%-3sg%]:0 %[%-3du%]:0 %[%-3plhum%]:0 %[%-3plnh%]:0

 ;

Sets

Prefix = %[%+1incdu%] %[%+1incpl%] %[%+1sg%] %[%+1excdu%] %[%+1excpl%] %[%+2sg%] %[%+2du%] %[%+2pl%] %[%+3sg%] %[%+3du%] %[%+3plhum%] %[%+3plnh%] ;

Suffix = %[%-1incdu%] %[%-1incpl%] %[%-1sg%] %[%-1excdu%] %[%-1excpl%] %[%-2sg%] %[%-2du%] %[%-2pl%] %[%-3sg%] %[%-3du%] %[%-3plhum%] %[%-3plnh%] ;

HighVow = I U i u ;
Glides  = J W j w ;

Vowel = A E Ä I O Ö U Ü Y Ý 
        a e ä i o ö u ü y ý ;

Consonants = M N P B T D K G V S J R L
 	     m n p b t d k g v s j r l ;

NeverCluster = M N Ñ P T S J L
	       m n Ñ p t s j l ;

Nasals = M N Ŋ
       	 m n ŋ ;

VRK = V R K
      v r k ;

BDG = B D G
      b d g ;

Rules

"High vowels -> glides"
HighVow:Glides <=> .#. _ ;
	           :Vowel _ :Vowel ;

"Mid vowel raising"
e:i <=> _ :u ;

"No duplicate vowels"
Vx:0 <=> Vx: %>: _ ;
     where Vx in Vowels ;

"Consonant cluster simplification"
Cx:0 <=> _ %>: NeverCluster: ;
     where Cx in Consonants ;

"Consonant cluster simplification for mismatched nasal-stop clusters"
Cx:0 <=> _ %>: :Cy ;
     where Cx in Nasals
     	   Cy in BDG
     mixed ;

! is it possible to do this with one rule? maybe
! do I know how? no
"VRK mutation 1 v-m"
Cx:m <=> _ %>: :b ;
     where Cx in Consonants ;
"VRK mutation 1 V-M"
Cx:M <=> _ %>: :B ;
     where Cx in Consonants ;
"VRK mutation 1 r-n"
Cx:n <=> _ %>: :d ;
     where Cx in Consonants ;
"VRK mutation 1 R-N"
Cx:N <=> _ %>: :D ;
     where Cx in Consonants ;
"VRK mutation 1 k-ñ"
Cx:ŋ <=> _ %>: :g ;
     where Cx in Consonants ;
"VRK mutation 1 K-Ñ"
Cx:Ŋ <=> _ %>: :G ;
     where Cx in Consonants ;

"VRK mutation 2"
Cx:Cy <=> Consonants: %>: _ ;
      where Cx in VRK
      	    Cy in BDG
      matched ;

! This seems to break something
! "Optional -e after word-final consonant"
! 0:e <= :Consonants _ .#. ;

! Resources:
! http://wiki.apertium.org/wiki/Starting_a_new_language_with_HFST#Enter_twol
! https://kitwiki.csc.fi/twiki/bin/view/KitWiki/HfstHome
! https://github.com/hfst/
! http://wiki.apertium.org/wiki/Twol
! http://wiki.apertium.org/wiki/Hfst

